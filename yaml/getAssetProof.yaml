openapi: 3.0.0
info:
  title: Helius API
  version: 1.0.0
servers:
  - url: https://rpc.helius.xyz
paths:
  /?api-key=<api_key>:
    post:
      tags: 
        -RPC
      summary: getAssetProof
      operationId: rpc
      parameters: 
        - name: api-key
          in: query
          description: The API key.
          required: true
          schema:
            type: string
            example: "string"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                jsonrpc:
                  type: string
                  enum: ["2.0"]
                  description: The version of the JSON-RPC protocol.
                  required: true
                id:
                  type: string
                  description: An ID to identify the request.
                  required: true
                method:
                  type: string
                  enum: ["getAssetProof"]
                  description: The name of the DAS method to invoke.
                  required: true
                params:
                  type: object
                  properties:
                    id:
                      type: string
                      description: The ID of the compressed asset to return it's proof.
                      example: "string"
                      required: true
                  required:
                    - id
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  root:
                    type: string
                    description: The root of the merkle tree.
                  proof:
                    type: array
                    description: The proof of the asset.
                    items:
                      type: string
                  node_index:
                    type: integer
                  leaf:
                    type: string
                    description: The leaf of the merkle tree.
                  tree_id:
                    type: string
                    description: The ID of the merkle tree.
        200 No Content:
          description: 'No content.'
        400:
          description: Invalid request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          
        401:
          description: Unauthorized request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        403:
          description: Request was forbidden.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        404:
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        429:
          description: Exceeded rate limit..
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        500:
          description: The server encountered an unexpected condition that prevented it from fulfilling the request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
