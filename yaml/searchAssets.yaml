openapi: 3.0.0
info:
  title: Helius API
  version: 1.0.0
servers:
  - url: https://rpc.helius.xyz
paths:
  /?api-key=<api_key>:
    post:
      tags: 
        -RPC
      summary: searchAssets
      operationId: rpc
      parameters: 
        - name: api-key
          in: query
          description: The API key.
          required: true
          schema:
            type: string
            example: "string"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                jsonrpc:
                  type: string
                  enum: ["2.0"]
                  description: The version of the JSON-RPC protocol.
                  required: true
                id:
                  type: string
                  description: An ID to identify the request.
                  required: true
                method:
                  type: string
                  enum: ["searchAssets"]
                  description: The name of the DAS method to invoke.
                  required: true
                params:
                  type: object
                  properties:
                    page:
                      type: integer
                      description: The page of results to return.
                      example: 1
                      required: true
                    authorityAddress: 
                      type: string
                      description: The criteria for authority address set for the asset search.
                      example: "string"
                      required: false
                    limit:
                      type: integer
                      description: The maximum number of assets to return.
                      example: 100
                      required: false
                    sortBy:
                      type: string
                      description: The criteria by which the retrieved assets will be sorted.
                      enum: ["created", "recent_action", "updated"]
                      example: { "sortBy": "created", "sortDirection": "asc"}
                      required: false
                    compressed: 
                      type: boolean
                      description: The criteria in which an asset is compressed or not. 
                      example: true
                      required: false
                    compressible: 
                      type: boolean
                      description: The criteria in which an asset is compressible or not.
                      example: false
                      required: false
                    delegate: 
                      type: integer
                      description: The criteria for delegate set for the asset search.
                      required: false
                    creatorAddress: 
                      type: string
                      description: The criteria for creator in asset search.
                      example: "string"
                      required: false
                    creatorVerified: 
                      type: boolean
                      description: The criteria for whether a creator is verified or not.
                      example: true
                      required: false
                    grouping:
                      type: string, string
                      description: The address of the owner whose assets to retrieve.
                      example: ["collection", "DRiP2Pn2K6fuMLKQmt5rZWyHiUZ6WK3GChEySUpHSS4x"]
                      required: false
                    supply:
                      type: integer
                      description: The criteria for supply set for the asset search.
                      example: 0
                      required: false
                    supplyMint:
                      type: string
                      description: The criteria for supply mint set for the asset search.
                      required: false
                    frozen: 
                      type: boolean
                      description: The criteria for whether an assets searched are frozen or not. 
                      example: false
                      required: false
                    burnt: 
                      type: boolean
                      description: The criteria for whether an asset is burnt or not.
                      example: false
                      required: false
                    interface: 
                      type: string
                      description: The criteria for interface set for the asset search.
                      example: "Custom"
                      required: false
                    ownerAddress:
                      type: string
                      description: The address of the owner whose assets to retrieve.
                      example: "string"
                      required: false
                    royaltyTargetType: 
                      type: string
                      description: The criteria for royalty target type set for the asset search.
                      example: creators
                      required: false
                    royaltyTarget:
                      type: integer
                      description: The criteria for royalty target set for the asset search.
                      example: null
                      required: false
                    royaltyAmount:
                      type: integer
                      description: The criteria for royalty amount set for the asset search.
                      example: 0
                      required: false
                    ownerType: 
                      type: integer
                      description: The criteria for ownership model set for the asset search.
                      example: single
                      required: false
                    before:
                      type: string
                      description: The cursor for paginating backwards through the assets.
                      example: "string"
                      required: false
                    after:
                      type: string
                      description: The cursor for paginating forwards through the assets.
                      example: "string"
                      required: false
                  required:
                    - page
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  assets:
                    type: object
                    properties:
                      total:
                        type: integer
                        description: The total number of assets found.
                        example: 2
                      limit:
                        type: integer
                        description: The maximum number of assets requested.
                        example: 100
                      page:
                        type: integer
                        description: The current page of results.
                        example: 1
                      items:
                        type: array
                        description: An array of assets.
                        items:
                          type: object
                          properties:
                            interface:
                              type: string
                              description: The interface of the asset.
                              example: "V1_NFT"
                            id:
                              type: string
                              description: The ID of the asset.
                            content:
                              type: object
                              description: The content of the asset.
                            authorities:
                              type: array
                              items:          
                                type: object 
                              description: The authorities of the asset.xs
                            compression:
                              type: object
                              description: The compression details for asset.
                            grouping: 
                              type: object
                              description: The grouping details for asset.
                            royalty: 
                              type: object
                              description: The royalty details for asset.
                            creators: 
                              type: array
                              items:          
                                type: object 
                              description: The creators details for asset.
                            ownership: 
                              type: object
                              description: The ownership details for asset.
                            supply:
                              type: integer
                              description: The supply of the asset.
                            mutable: 
                              type: boolean
                              description: Whether an asset is mutable or not.
        200 No Content:
          description: 'No content.'
        400:
          description: Invalid request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          
        401:
          description: Unauthorized request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        403:
          description: Request was forbidden.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        404:
          description: The specified resource was not found.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        429:
          description: Exceeded rate limit..
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        500:
          description: The server encountered an unexpected condition that prevented it from fulfilling the request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
